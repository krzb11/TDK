// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

/ {
    power_switches {
        compatible = "gpio-leds";
        power_en: power_en {
            gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>;
			label = "GPIO pin controlling the peripherial power circuitry";
        };
    };

    aliases {
        /delete-property/ sw1;
        /delete-property/ sw2;
        /delete-property/ sw3;
        powersw = &power_en;
        uart1 = &uart1;
		spi-flash0 = &w25q128;
    };

    buttons {
        /delete-node/ button_1;
        /delete-node/ button_2;
        /delete-node/ button_3;
    };
};

&uart0 {
    current-speed = <921600>;
};

&uart1 {
    current-speed = <115200>;
    status = "okay";
    compatible = "nordic,nrf-uarte";
};

&uart1_default {
    group1 {
        psels = <NRF_PSEL(UART_TX, 0, 6)>;
    };

    group2 {
        psels = <NRF_PSEL(UART_RX, 0, 7)>;
    };
};

&uart1_sleep {
    group1 {
        psels = <NRF_PSEL(UART_TX, 1, 0)>,
                <NRF_PSEL(UART_RX, 0, 31)>;
    };
};

&led0 {
    gpios = <&gpio0 28 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN | (1 << 8))>;
    label = "System Status LED";
};

&led1 {
    gpios = <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN | (1 << 8))>;
    label = "Bluetooth Connection LED";
};

&led2 {
    gpios = <&gpio0 26 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN | (1 << 8))>;
    label = "Battery Status LED";
};

&led3 {
    gpios = <&gpio0 27 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN | (1 << 8))>;
    label = "Battery Charge LED";
};

&i2c1 {
    status = "disabled";
};

&gpio_fwd {
    status = "disabled";
};

/ {
    zephyr,user {
        adc_pwdn-gpios = <&gpio1 8 GPIO_PULL_UP>;
        adc_reset-gpios = <&gpio1 9 GPIO_PULL_UP>;
        io-channels = <&adc 0>;
        battery_chg-gpios = <&gpio0 5 0>;
    };
};

&nfct {
    status = "disabled";
};

/delete-node/ &{/pin-controller/pwm0_default/group1/};

&w25q128 { //w25q256
    compatible = "nordic,qspi-nor";
    reg = <0>;
    /* W25Q256 supports only pp and pp4o */
    writeoc = "pp4o";
    /* W25Q256 supports all readoc options */
    readoc = "read4io";
    sck-frequency = <25000000>;
    jedec-id = [];
    sfdp-bfp = [];
    size = <268435456>;
    has-dpd;
    t-enter-dpd = <3000>;
    t-exit-dpd = <30000>;
    //quad-enable-requirements = "S2B1v1";
    quad-enable-requirements = "NONE";
};
